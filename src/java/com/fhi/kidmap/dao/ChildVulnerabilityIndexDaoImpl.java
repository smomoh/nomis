/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package com.fhi.kidmap.dao;

import com.fhi.kidmap.business.ChildVulnerabilityIndex;
import java.util.ArrayList;
import java.util.List;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

/**
 *
 * @author COMPAQ USER
 */
public class ChildVulnerabilityIndexDaoImpl implements ChildVulnerabilityIndexDao
{
    Session session;
    Transaction tx;
    SessionFactory sessions;
    public ChildVulnerabilityIndex getChildVulnerabilityIndex(String preEnrollNo) throws Exception
    {
        ChildVulnerabilityIndex cvi=null;
        List list = new ArrayList();
         try {
            session = HibernateUtil.getSession();
            tx = session.beginTransaction();
        list = session.createQuery("from ChildVulnerabilityIndex cvi where cvi.preEnrollmentNo =:cviNo").setString("cviNo", preEnrollNo).list();
        tx.commit();
        session.close();
        }
         catch (HibernateException he)
         {
             session.close();
            throw new Exception(he);
        }
        if(list !=null && list.size()>0)
        {
            cvi=(ChildVulnerabilityIndex)list.get(0);
        }

        return cvi;
    }
    public List getChildVulnerabilityIndexList(String additionalQuery) throws Exception
    {
        List list = new ArrayList();
        List cviList = new ArrayList();
         try {
            session = HibernateUtil.getSession();
            tx = session.beginTransaction();
        list = session.createQuery("from ChildVulnerabilityIndex cvi where cvi.orgCode is not null "+additionalQuery+" order by cvi.preEnrollmentNo").list();
        tx.commit();
        session.close();
        }
         catch (HibernateException he)
         {
             session.close();
            throw new Exception(he);
         }
        for(Object s:list)
        {
            cviList.add((ChildVulnerabilityIndex)s);
        }
        return cviList;
    }
    public List getCVILgaList(String stateId) throws Exception
    {
        List list = new ArrayList();
        try {
            session = HibernateUtil.getSession();
            tx = session.beginTransaction();
        list = session.createQuery("select distinct cvi.lgaCode from ChildVulnerabilityIndex cvi  where cvi.stateCode =:state_code order by cvi.lgaCode").setString("state_code", stateId).list();
        tx.commit();
        session.close();
        }
         catch (HibernateException he)
         {
             session.close();
            throw new Exception(he);
         }
         return list;
    }
    public List getCVIStateList() throws Exception
    {
        List list = new ArrayList();
        try {
            session = HibernateUtil.getSession();
            tx = session.beginTransaction();
        list = session.createQuery("select distinct cvi.stateCode from ChildVulnerabilityIndex cvi  order by cvi.stateCode").list();
        tx.commit();
        session.close();
        }
         catch (HibernateException he)
         {
             session.close();
            throw new Exception(he);
         }
         return list;
    }
    public int getCVIScore(ChildVulnerabilityIndex cvi) throws Exception
    {
        int score=cvi.getHealth()+cvi.getEducation()+cvi.getShelter()+cvi.getProtection()+cvi.getNutrition()+cvi.getEconomicStrengthening();
        return score;
    }
    public void saveChildVulnerabilityIndex(ChildVulnerabilityIndex cvi) throws Exception
    {
        try
        {
            session=HibernateUtil.getSession();
            tx=session.beginTransaction();
            session.save(cvi);
            tx.commit();
            session.close();
        }
        catch(HibernateException hbe)
        {
            session.close();
            throw new Exception(hbe);
        }
    }
    public void updateChildVulnerabilityIndex(ChildVulnerabilityIndex cvi) throws Exception
    {
        try
        {
            session=HibernateUtil.getSession();
            tx=session.beginTransaction();
            session.update(cvi);
            tx.commit();
            session.close();
        }
        catch(HibernateException hbe)
        {
            session.close();
            throw new Exception(hbe);
        }
    }
    public void deleteChildVulnerabilityIndex(ChildVulnerabilityIndex cvi) throws Exception
    {
        try
        {
            session=HibernateUtil.getSession();
            tx=session.beginTransaction();
            session.delete(cvi);
            tx.commit();
            session.close();
        }
        catch(HibernateException hbe)
        {
            session.close();
            throw new Exception(hbe);
        }
    }
}
