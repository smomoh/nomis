/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package com.fhi.kidmap.controller;

import com.fhi.nomis.nomisutils.AppUtility;
import com.fhi.kidmap.business.ChildVulnerabilityIndex;
import com.fhi.kidmap.dao.ChildVulnerabilityIndexDao;
import com.fhi.kidmap.dao.ChildVulnerabilityIndexDaoImpl;
import com.fhi.kidmap.dao.DaoUtil;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

/**
 *
 * @author COMPAQ USER
 */
public class ChildVulnerabilityIndexAction extends org.apache.struts.action.Action {
    
    /* forward name="success" path="" */
    private static final String SUCCESS = "success";
    private static final String FAILURE = "failure";
    
    /**
     * This is the action called from the Struts framework.
     * @param mapping The ActionMapping used to select this instance.
     * @param form The optional ActionForm bean for this request.
     * @param request The HTTP Request we are processing.
     * @param response The HTTP Response we are processing.
     * @throws java.lang.Exception
     * @return
     */
    @Override
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception {
        ChildVulnerabilityIndexForm cviForm=(ChildVulnerabilityIndexForm)form;
        ChildVulnerabilityIndex cvi=new ChildVulnerabilityIndex();
        ChildVulnerabilityIndexDao cviDao=new ChildVulnerabilityIndexDaoImpl();
        AppUtility appUtil=new AppUtility();

        cvi.setStateCode(cviForm.getStateCode());
        cvi.setLgaCode(cviForm.getLgaCode());
        String orgCode=cviForm.getOrgCode();
        if(orgCode !=null)
        orgCode=orgCode.trim();
        cvi.setOrgCode(orgCode);
        String preEnrollSNo=appUtil.padSerialNumber(cviForm.getPreEnrollmentNo());
        String preEnrollNo=orgCode+"/"+preEnrollSNo;
        cvi.setPreEnrollmentNo(preEnrollNo);
        cvi.setSurName(cviForm.getSurName());
        cvi.setFirstName(cviForm.getFirstName());
        cvi.setAgeUnit(cviForm.getAgeUnit());
        cvi.setAge(cviForm.getAge());
        cvi.setAddress(cviForm.getAddress());
        String saveBtnStatus="false";
        String modifyBtnStatus="true";

        String dateOfAssessment=cviForm.getDateOfAssessment();
        String[] dateArray=null;
        String mySqlDate=null;
        if(dateOfAssessment !=null && dateOfAssessment.indexOf("/") !=-1)
        {
            dateArray=dateOfAssessment.split("/");
            if(dateArray.length ==3)
            mySqlDate=appUtil.getMySqlDate(dateArray[1], dateArray[0], dateArray[2]);
        }
        
        cvi.setDateOfAssessment(mySqlDate);
        cvi.setGender(cviForm.getGender());
        cvi.setHealth(cviForm.getHealth());
        cvi.setEducation(cviForm.getEducation());
        cvi.setNutrition(cviForm.getNutrition());
        cvi.setProtection(cviForm.getProtection());
        cvi.setEconomicStrengthening(cviForm.getEconomicStrengthening());
        cvi.setShelter(cviForm.getShelter());
        HttpSession session=request.getSession();
                
        String requiredAction=cviForm.getActionName();
        if(requiredAction==null)
        {
            cviForm.reset(mapping, request);
            session.setAttribute("saveBtnStatus", saveBtnStatus);
            session.setAttribute("modifyBtnStatus", modifyBtnStatus);
            return mapping.findForward(SUCCESS);
        }
        else if(requiredAction.equalsIgnoreCase("cviDetails"))
        {
            ChildVulnerabilityIndex cvi2=(ChildVulnerabilityIndex)cviDao.getChildVulnerabilityIndex(preEnrollNo);
            if(cvi2==null)
            {
                cviForm.reset(mapping, request);
                cviForm.setOrgCode(orgCode);
                cviForm.setPreEnrollmentNo(preEnrollSNo);
                setBtnStatus(session,"false","true");
                return mapping.findForward(SUCCESS);
            }
            cviForm.reset(mapping, request);
            cviForm.setAddress(cvi2.getAddress());
            cviForm.setOrgCode(cvi2.getOrgCode());
            cviForm.setAge(cvi2.getAge().trim());
            cviForm.setAgeUnit(cvi2.getAgeUnit().trim());
            cviForm.setDateOfAssessment(appUtil.getDisplayDate(cvi2.getDateOfAssessment()));
            cviForm.setGender(cvi2.getGender().trim());
            cviForm.setSurName(cvi2.getSurName().trim());
            cviForm.setFirstName(cvi2.getFirstName().trim());
            String cviUniqueId=cvi2.getPreEnrollmentNo().trim();
            cviForm.setPreEnrollmentNo(cviUniqueId.substring(cviUniqueId.lastIndexOf("/")+1));
            cviForm.setCurrentPreEnrollmentNo(cviUniqueId);
            cviForm.setHealth(cvi2.getHealth());
            cviForm.setEducation(cvi2.getEducation());
            cviForm.setShelter(cvi2.getShelter());
            cviForm.setProtection(cvi2.getProtection());
            cviForm.setNutrition(cvi2.getNutrition());
            cviForm.setEconomicStrengthening(cvi2.getEconomicStrengthening());
            
            session.setAttribute("saveBtnStatus","true");
            session.setAttribute("modifyBtnStatus","false");
            
            return mapping.findForward(SUCCESS);
        }
        else if(requiredAction.equalsIgnoreCase("save"))
        {
            cviDao.saveChildVulnerabilityIndex(cvi);
            setBtnStatus(session,"false","true");
        }
        else if(requiredAction.equalsIgnoreCase("modify"))
        {
            cviDao.updateChildVulnerabilityIndex(cvi);
            setBtnStatus(session,"false","true");
        }
        else if(requiredAction.equalsIgnoreCase("delete"))
        {
            cvi.setPreEnrollmentNo(cviForm.getCurrentPreEnrollmentNo());
            cviDao.deleteChildVulnerabilityIndex(cvi);
            setBtnStatus(session,"false","true");
        }
        cviForm.reset(mapping, request);
        return mapping.findForward(SUCCESS);
    }
    private void setBtnStatus(HttpSession session,String saveBtnValue,String modifyBtnValue)
    {
            session.setAttribute("saveBtnStatus", saveBtnValue);
            session.setAttribute("modifyBtnStatus", modifyBtnValue);
    }
}
